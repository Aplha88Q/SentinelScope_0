import pandas as pd
df = pd.read_excel('DTI_Project_new.xlsx')
print(df.head())
df_cleaned = df.dropna()
df_cleaned = df.dropna(subset=['STATE'])
null_state_rows = df[df['STATE'].isnull()]
df_cleaned = df.dropna(subset=['STATE'])

**Random Forest Classifier**

import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report
df = pd.read_excel('DTI_Project_new.xlsx')

df_encoded = pd.get_dummies(df[['USERNAME', 'STATE', 'COUNTRY', 'SOURCEHOST']])
X = pd.concat([df_encoded, df[['LATITUDE', 'LONGITUDE']]], axis=1)
y = df['LABEL']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = RandomForestClassifier(random_state=42)
clf.fit(X_train, y_train)
y_pred = clf.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy: {accuracy:.2f}')

print(classification_report(y_test, y_pred))

**Logistic Regression model**
**To predict the country from which a username is coming from based on the provided dataset,**
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, classification_report

data = pd.read_excel('DTI_Project_new.xlsx')

le = LabelEncoder()
data['USERNAME'] = le.fit_transform(data['USERNAME'])
data['COUNTRY'] = le.fit_transform(data['COUNTRY'])

X = data[['USERNAME']]
y = data['COUNTRY']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

model = LogisticRegression()
model.fit(X_train, y_train)

y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)


print("\nClassification Report:")
print(classification_report(y_test, y_pred))
**Support Vector Machine**
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler, LabelEncoder
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, classification_report

data = pd.read_excel('DTI_Project_new.xlsx')

label_encoder = LabelEncoder()
data['SOURCEHOST'] = label_encoder.fit_transform(data['SOURCEHOST'])
data['USERNAME'] = label_encoder.fit_transform(data['USERNAME'])

features = ['LATITUDE', 'LONGITUDE', 'SOURCEHOST', 'USERNAME']
target = 'LABEL'

X = data[features]
y = data[target]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)
model = SVC(kernel='rbf')
model.fit(X_train_scaled, y_train)

y_pred = model.predict(X_test_scaled)

accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)

print("\nClassification Report:")
print(classification_report(y_test, y_pred))
